############################################################################
#
# Docker command my_man
#
############################################################################

 docker run --name my_mongo -d mongo    # запуск контейнера
 docker container prune                 # удаление контейнеров
 docker rm $(docker ps -a -q -f status=exited)


 #################################################################
 https://stepik.org/lesson/957994/step/2?unit=964436

 Дополнительные материалы о Docker

Лабораторная работа: введение в Docker с нуля. Ваш первый микросервис - https://habr.com/ru/articles/346634/

Руководство по Docker Compose для начинающих - https://habr.com/ru/companies/ruvds/articles/450312/
Установка для Debian 10

Для начала обновим наши репозитории:

    sudo apt update

И установим необходимые для скачивания утилиты:

    sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

Далее скопируем с сайта публичный gpg-ключ:

    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

Добавляем директорию для скачивания docker-а:

    sudo add-apt-repository “deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable”

Далее проверяем наличие в кеше и устанавливаем Docker:

    apt-cache policy docker-ce

    apt install docker-ce

Наиболее используемые опции в контейнере Docker:

-ti – teletype (эмуляция входа в контейнер) и interactive (будем в эмуляции, пока сами не выйдем)
-e – прописать переменные окружения в /etc/hosts
-d – запустить в фоновом режиме (демоном)
--link – подключение по сети двух контейнеров, legacy функция
-p – используется для проброса портов
Наиболее используемые команды Docker:

docker pull имя образа – скачивание образа
docker ps – используется для просмотра активных контейнеров
docker run * -v /home/mount/data:/var/lib/mysql/data – примонтировать директорию на хосте в docker; в Docker Compose сначала указывается docker путь, потом хост путь
docker network ls – показать сети docker
docker network inspect [имя сети] – посмотреть конфигурацию сети
docker rm [имя] – удалить контейнер
docker rmi [имя] – удалить image